{
	"name": "101_GR09_DF_imdbtop250",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "101_GR09_DS_imdbtop250",
						"type": "DatasetReference"
					},
					"name": "RAWDimFilmYear"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "RAWDimFilmYearSelected"
				},
				{
					"name": "RemoveDuplicatesStep1"
				},
				{
					"name": "RemoveDuplicatesStep2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Ranking as string,",
				"          IMDByear as string,",
				"          IMDBlink as string,",
				"          Title as string,",
				"          Date as integer,",
				"          RunTime as string,",
				"          Genre as string,",
				"          Rating as string,",
				"          Score as string,",
				"          Votes as string,",
				"          Gross as string,",
				"          Director as string,",
				"          Cast1 as string,",
				"          Cast2 as string,",
				"          Cast3 as string,",
				"          Cast4 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> RAWDimFilmYear",
				"RAWDimFilmYear select(mapColumn(",
				"          FilmYear = Date",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RAWDimFilmYearSelected",
				"RAWDimFilmYearSelected aggregate(groupBy(FilmYear),",
				"     each(match(name!=\"FilmYear\"), $$ = first($$))) ~> RemoveDuplicatesStep1",
				"RemoveDuplicatesStep1 aggregate(FilmYearOutput = count(1)) ~> RemoveDuplicatesStep2",
				"RemoveDuplicatesStep2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Ranking as string,",
				"          IMDByear as string,",
				"          IMDBlink as string,",
				"          Title as string,",
				"          Date as string,",
				"          RunTime as string,",
				"          Genre as string,",
				"          Rating as string,",
				"          Score as string,",
				"          Votes as string,",
				"          Gross as string,",
				"          Director as string,",
				"          Cast1 as string,",
				"          Cast2 as string,",
				"          Cast3 as string,",
				"          Cast4 as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}